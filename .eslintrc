{
  // I want to use babel-eslint for parsing!
  "parser": "@babel/eslint-parser",
  "env": {
    // I write for browser
    "browser": true,
    // in CommonJS
    "node": true,
    "es6": true
  },
  "globals": {
    "jest": true,
    "chai": false,
    "console": false,
    "define": false,
    "expect": false,
    "process": false,
    "require": false,
    "sinon": false,
    "__MOCK__": false,
    "__MOCK_PARAMS__": false,
    "__UPLOAD_API__": false,
    "__DATA_HOST__": false,
    "__API_HOST__": false,
    "__SHOW_ACCEPT_TERMS__": false,
    "__PASSWORD_MIN_LENGTH__": false,
    "__INVITE_KEY__": false
  },
  // To give you an idea how to override rule options:
  "rules": {
    "quotes": [2, "single"],
    "strict": [2, "never"],
    "eol-last": 0,
    "no-mixed-requires": 0,
    "no-underscore-dangle": 0,
    "wrap-iife": [2, "inside"],
    "no-caller": 2,
    "no-undef": 2,
    "new-cap": 2,
    "semi": 2,
    "react/jsx-uses-react": 2,
    "react/jsx-uses-vars": 2,
    "react/react-in-jsx-scope": 2,
    // uploader specific
    "camelcase": 0,
    "eqeqeq": 0,
    "no-bitwise": 0,
    // TODO: either try to fix this globally or use an embedded .eslintrc for drivers
    "no-use-before-define": 0,
    "lodash/prefer-lodash-method": "warn",
    "max-len": "warn",
    "prefer-destructuring": "warn",
    "no-buffer-constructor": "warn"
  },
  "plugins": [
    "@babel",
    "react",
    "promise",
    "import",
    "lodash",
    "jest"
  ],
  "settings": {
    "import/resolver": {
      "webpack": {
        "config": "webpack.config.eslint.js"
      }
    }
  }
}
